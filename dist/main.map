{"version":3,"sources":["../node_modules/typical/lib/typical.js","../node_modules/array-back/index.js","../node_modules/test-value/index.js","../node_modules/find-replace/lib/find-replace.js","../node_modules/argv-tools/index.js","../node_modules/command-line-args/lib/option-definition.js","../node_modules/command-line-args/lib/option-definitions.js","../node_modules/command-line-args/lib/argv-parser.js","../node_modules/command-line-args/lib/option-flag.js","../node_modules/command-line-args/lib/option.js","../node_modules/lodash.camelcase/index.js","../node_modules/command-line-args/lib/output.js","../node_modules/command-line-args/lib/output-grouped.js","../node_modules/command-line-args/index.js","constants.js","cli/options.js","../node_modules/escape-string-regexp/index.js","../node_modules/color-name/index.js","../node_modules/color-convert/conversions.js","../node_modules/color-convert/route.js","../node_modules/color-convert/index.js","../node_modules/ansi-styles/index.js","../node_modules/has-flag/index.js","../node_modules/supports-color/index.js","../node_modules/chalk/templates.js","../node_modules/chalk/index.js","../node_modules/command-line-usage/lib/chalk-format.js","../node_modules/command-line-usage/lib/section.js","../node_modules/deep-extend/lib/deep-extend.js","../node_modules/table-layout/lib/cell.js","../node_modules/table-layout/lib/rows.js","../node_modules/table-layout/lib/padding.js","../node_modules/table-layout/lib/column.js","../node_modules/reduce-flatten/lib/reduce-flatten.js","../node_modules/wordwrapjs/index.js","../node_modules/table-layout/lib/ansi.js","../node_modules/table-layout/lib/columns.js","../node_modules/lodash.padend/index.js","../node_modules/table-layout/index.js","../node_modules/command-line-usage/lib/option-list.js","../node_modules/command-line-usage/lib/content.js","../node_modules/command-line-usage/lib/content-section.js","../node_modules/command-line-usage/index.js","cli/usage.js","errors.js","helpers.js","commands/decentralize.js","commands/prune.js","commands/index.js","main.js"],"names":["arrayify","input","t","require","Array","isArray","undefined","isArrayLike","prototype","slice","call","module","exports","testValue","value","test","options","Object","isPlainObject","isObject","strict","keys","every","prop","queryValue","isNegated","isContains","charAt","objectValue","result","tests","some","val","RegExp","indexOf","Function","where","findReplace","array","valueTest","found","replaceWiths","arguments","splice","forEach","index","expanded","replaceWith","concat","push","replaceWithValue","reverse","item","spliceArgs","apply","re","short","long","combinedShort","optEquals","ArgvArray","load","argv","clear","process","arg","String","length","expandOptionEqualsNotation","expandedArgs","matches","match","expandGetoptNotation","hasCombinedShortOptions","expandCombinedShortArg","from","split","map","letter","isOptionEqualsNotation","isOption","isLongOption","getOptionName","replace","isValue","OptionDefinition","constructor","definition","name","type","alias","multiple","lazyMultiple","defaultOption","defaultValue","group","isBoolean","Boolean","isFunction","isMultiple","create","def","argvTools","Definitions","validate","invalidOption","halt","isDefined","isNumber","hasDuplicates","get","find","getDefault","isGrouped","whereGrouped","filter","containsValidGroup","whereNotGrouped","whereDefaultValueSet","definitions","Definition","message","err","Error","items","i","ArgvParser","assign","origArg","Symbol","iterator","event","singularDefaultSet","unknownFound","stopAtFirstUnknown","argInfo","subArg","Option","FlagOption","set","_value","WeakMap","state","resetToDefault","_set","arr","optionName","Output","Map","toObject","camelCase","output","option","skipUnknown","_unknown","GroupedOutput","superOutputNoCamel","superOutput","unknown","grouped","_all","outputValue","groupName","_none","commandLineArgs","optionDefinitions","partial","parser","has","DECENTRALIZE","PRUNE","VUE_I18N_REGEX_FUNC_CALLER","availableCommands","command","description","typeLabel","matchOperatorsRe","str","TypeError","colorConvert","wrapAnsi16","fn","offset","wrapAnsi256","code","wrapAnsi16m","rgb","assembleStyles","codes","styles","modifier","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","color","black","red","green","yellow","blue","magenta","cyan","white","gray","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","grey","styleName","style","open","close","defineProperty","enumerable","ansi2ansi","n","rgb2rgb","r","g","b","ansi","ansi256","ansi16m","key","suite","ansi16","flag","prefix","startsWith","pos","terminatorPos","os","hasFlag","env","forceColor","translateLevel","level","hasBasic","has256","has16m","supportsColor","stream","isTTY","min","platform","osRelease","release","Number","versions","node","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","version","parseInt","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","getSupportLevel","FORCE_COLOR","stdout","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","c","fromCharCode","parseArguments","args","results","chunks","trim","chunk","isNaN","m","escape","chr","parseStyle","lastIndex","exec","buildStyle","chalk","enabled","layer","current","tmp","escapeChar","join","pop","errMsg","escapeStringRegexp","ansiStyles","stdoutColor","template","isSimpleWindowsTerm","toLowerCase","levelMapping","skipModels","Set","applyOptions","obj","scLevel","Chalk","chalkTag","setPrototypeOf","closeRe","build","_styles","_empty","visible","model","toUpperCase","proto","defineProperties","builder","applyStyle","self","hasGrey","__proto__","argsLen","a","originalDim","strings","parts","raw","default","format","chalkFormat","Section","list","add","content","line","emptyLine","header","text","toString","EOL","isSpecificValue","Buffer","Date","cloneSpecificValue","x","alloc","copy","getTime","deepCloneArray","clone","deepExtend","safeGetProperty","object","property","target","src","_column","Cell","column","cellValue","Rows","rows","columns","row","objectToIterable","removeEmptyColumns","data","distinctColumnNames","emptyColumns","reduce","columnNames","columnName","isString","emptyCol","Padding","padding","left","right","_padding","Column","width","maxWidth","minWidth","noWrap","break","contentWrappable","contentWidth","minContentWidth","generatedWidth","wrappedContentWidth","Math","max","isResizable","isFixed","generateWidth","generateMinWidth","flatten","prev","curr","ansiEscapeSequence","WordWrap","_lines","lines","trimLine","bind","lineWords","breakWord","word","currentLine","replaceAnsi","wrap","block","isWrappable","getChunks","noTrim","string","letters","piece","pieces","remove","_maxWidth","Columns","totalWidth","col","totalFixedWidth","getFixed","getResizable","autoSize","resizableColumns","floor","grownColumns","shrunkenColumns","salvagedSpace","currentGeneratedWidth","getColumns","cell","longestWord","getLongestWord","words","Table","ttyWidth","defaults","extend","ignoreEmptyColumns","optionColumn","getWrapped","getLines","wrappedLines","wrapped","mostLines","getLongestArray","renderLines","padCell","arrays","lengths","padEnd","ansiLength","OptionList","optionList","hide","groups","d","noGroupMatch","groupMatch","intersect","getOptionNames","reverseNameOrder","tableOptions","table","arr1","arr2","item1","item2","Content","_content","defaultPadding","ansiFormatRow","JSON","stringify","nowrap","ContentSection","section","commandLineUsage","sections","summary","opt","ErrorRequireArgument","validateArguments","source","localesFolder","decentralize","prune","optionsDefinition","console","log","usage"],"mappings":"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","file":"main.map","sourceRoot":"../src","sourcesContent":["'use strict'\n\n/**\n * For type-checking Javascript values.\n * @module typical\n * @typicalname t\n * @example\n * const t = require('typical')\n */\nexports.isNumber = isNumber\nexports.isString = isString\nexports.isBoolean = isBoolean\nexports.isPlainObject = isPlainObject\nexports.isArrayLike = isArrayLike\nexports.isObject = isObject\nexports.isDefined = isDefined\nexports.isFunction = isFunction\nexports.isClass = isClass\nexports.isPrimitive = isPrimitive\nexports.isPromise = isPromise\nexports.isIterable = isIterable\n\n/**\n * Returns true if input is a number\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n * @example\n * > t.isNumber(0)\n * true\n * > t.isNumber(1)\n * true\n * > t.isNumber(1.1)\n * true\n * > t.isNumber(0xff)\n * true\n * > t.isNumber(0644)\n * true\n * > t.isNumber(6.2e5)\n * true\n * > t.isNumber(NaN)\n * false\n * > t.isNumber(Infinity)\n * false\n */\nfunction isNumber (n) {\n  return !isNaN(parseFloat(n)) && isFinite(n)\n}\n\n/**\n * A plain object is a simple object literal, it is not an instance of a class. Returns true if the input `typeof` is `object` and directly decends from `Object`.\n *\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n * @example\n * > t.isPlainObject({ clive: 'hater' })\n * true\n * > t.isPlainObject(new Date())\n * false\n * > t.isPlainObject([ 0, 1 ])\n * false\n * > t.isPlainObject(1)\n * false\n * > t.isPlainObject(/test/)\n * false\n */\nfunction isPlainObject (input) {\n  return input !== null && typeof input === 'object' && input.constructor === Object\n}\n\n/**\n * An array-like value has all the properties of an array, but is not an array instance. Examples in the `arguments` object. Returns true if the input value is an object, not null and has a `length` property with a numeric value.\n *\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n * @example\n * function sum(x, y){\n *     console.log(t.isArrayLike(arguments))\n *     // prints `true`\n * }\n */\nfunction isArrayLike (input) {\n  return isObject(input) && typeof input.length === 'number'\n}\n\n/**\n * returns true if the typeof input is `'object'`, but not null!\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isObject (input) {\n  return typeof input === 'object' && input !== null\n}\n\n/**\n * Returns true if the input value is defined\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isDefined (input) {\n  return typeof input !== 'undefined'\n}\n\n/**\n * Returns true if the input value is a string\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isString (input) {\n  return typeof input === 'string'\n}\n\n/**\n * Returns true if the input value is a boolean\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isBoolean (input) {\n  return typeof input === 'boolean'\n}\n\n/**\n * Returns true if the input value is a function\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isFunction (input) {\n  return typeof input === 'function'\n}\n\n/**\n * Returns true if the input value is an es2015 `class`.\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isClass (input) {\n  if (isFunction(input)) {\n    return /^class /.test(Function.prototype.toString.call(input))\n  } else {\n    return false\n  }\n}\n\n/**\n * Returns true if the input is a string, number, symbol, boolean, null or undefined value.\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isPrimitive (input) {\n  if (input === null) return true\n  switch (typeof input) {\n    case \"string\":\n    case \"number\":\n    case \"symbol\":\n    case \"undefined\":\n    case \"boolean\":\n      return true\n    default:\n      return false\n  }\n}\n\n/**\n * Returns true if the input is a Promise.\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isPromise (input) {\n  if (input) {\n    var isPromise = isDefined(Promise) && input instanceof Promise\n    var isThenable = input.then && typeof input.then === 'function'\n    return isPromise || isThenable ? true : false\n  } else {\n    return false\n  }\n}\n\n/**\n * Returns true if the input is an iterable (`Map`, `Set`, `Array` etc.).\n * @param {*} - the input to test\n * @returns {boolean}\n * @static\n */\nfunction isIterable (input) {\n  if (input === null || !isDefined(input)) {\n    return false\n  } else {\n    return typeof input[Symbol.iterator] === 'function'\n  }\n}\n","/**\n * @module array-back\n * @example\n * const arrayify = require('array-back')\n */\nmodule.exports = arrayify\n\n/**\n * Takes any input and guarantees an array back.\n *\n * - converts array-like objects (e.g. `arguments`) to a real array\n * - converts `undefined` to an empty array\n * - converts any another other, singular value (including `null`) into an array containing that value\n * - ignores input which is already an array\n *\n * @param {*} - the input value to convert to an array\n * @returns {Array}\n * @alias module:array-back\n * @example\n * > a.arrayify(undefined)\n * []\n *\n * > a.arrayify(null)\n * [ null ]\n *\n * > a.arrayify(0)\n * [ 0 ]\n *\n * > a.arrayify([ 1, 2 ])\n * [ 1, 2 ]\n *\n * > function f(){ return a.arrayify(arguments); }\n * > f(1,2,3)\n * [ 1, 2, 3 ]\n */\nfunction arrayify (input) {\n  const t = require('typical')\n  if (Array.isArray(input)) {\n    return input\n  } else {\n    if (input === undefined) {\n      return []\n    } else if (t.isArrayLike(input)) {\n      return Array.prototype.slice.call(input)\n    } else {\n      return [ input ]\n    }\n  }\n}\n","'use strict'\nconst arrayify = require('array-back')\nconst t = require('typical')\n\n/**\n * @module test-value\n * @example\n * const testValue = require('test-value')\n */\nmodule.exports = testValue\n\n/**\n * @alias module:test-value\n * @param {any} - a value to test\n * @param {any} - the test query\n * @param [options] {object}\n * @param [options.strict] {boolean} - Treat an object like a value not a query.\n * @returns {boolean}\n */\nfunction testValue (value, test, options) {\n  options = options || {}\n  if (test !== Object.prototype && t.isPlainObject(test) && t.isObject(value) && !options.strict) {\n    return Object.keys(test).every(function (prop) {\n      let queryValue = test[prop]\n\n      /* get flags */\n      let isNegated = false\n      let isContains = false\n\n      if (prop.charAt(0) === '!') {\n        isNegated = true\n      } else if (prop.charAt(0) === '+') {\n        isContains = true\n      }\n\n      /* strip flag char */\n      prop = (isNegated || isContains) ? prop.slice(1) : prop\n      let objectValue = value[prop]\n\n      if (isContains) {\n        queryValue = arrayify(queryValue)\n        objectValue = arrayify(objectValue)\n      }\n\n      const result = testValue(objectValue, queryValue, options)\n      return isNegated ? !result : result\n    })\n  } else if (test !== Array.prototype && Array.isArray(test)) {\n    const tests = test\n    if (value === Array.prototype || !Array.isArray(value)) value = [ value ]\n    return value.some(function (val) {\n      return tests.some(function (test) {\n        return testValue(val, test, options)\n      })\n    })\n\n  /*\n  regexes queries will always return `false` for `null`, `undefined`, `NaN`.\n  This is to prevent a query like `/.+/` matching the string `undefined`.\n  */\n  } else if (test instanceof RegExp) {\n    if ([ 'boolean', 'string', 'number' ].indexOf(typeof value) === -1) {\n      return false\n    } else {\n      return test.test(value)\n    }\n  } else if (test !== Function.prototype && typeof test === 'function') {\n    return test(value)\n  } else {\n    return test === value\n  }\n}\n\n/**\n * Returns a callback suitable for use by `Array` methods like `some`, `filter`, `find` etc.\n * @param {any} - the test query\n * @returns {function}\n */\ntestValue.where = function (test) {\n  return function (value) {\n    return testValue(value, test)\n  }\n}\n","'use strict'\nconst arrayify = require('array-back')\nconst testValue = require('test-value')\n\n/**\n * Find and either replace or remove items from an array.\n *\n * @module find-replace\n * @example\n * > findReplace = require('find-replace')\n *\n * > findReplace([ 1, 2, 3], 2, 'two')\n * [ 1, 'two', 3 ]\n *\n * > findReplace([ 1, 2, 3], 2, [ 'two', 'zwei' ])\n * [ 1, [ 'two', 'zwei' ], 3 ]\n *\n * > findReplace([ 1, 2, 3], 2, 'two', 'zwei')\n * [ 1, 'two', 'zwei', 3 ]\n *\n * > findReplace([ 1, 2, 3], 2) // no replacement, so remove\n * [ 1, 3 ]\n */\nmodule.exports = findReplace\n\n/**\n * @param {array} - the input array\n * @param {valueTest} - a [test-value](https://github.com/75lb/test-value) query to match the value you're looking for\n * @param [replaceWith] {...any} - If specified, found values will be replaced with these values, else  removed.\n * @returns {array}\n * @alias module:find-replace\n */\nfunction findReplace (array, valueTest) {\n  const found = []\n  const replaceWiths = arrayify(arguments)\n  replaceWiths.splice(0, 2)\n\n  arrayify(array).forEach((value, index) => {\n    let expanded = []\n    replaceWiths.forEach(replaceWith => {\n      if (typeof replaceWith === 'function') {\n        expanded = expanded.concat(replaceWith(value))\n      } else {\n        expanded.push(replaceWith)\n      }\n    })\n\n    if (testValue(value, valueTest)) {\n      found.push({\n        index: index,\n        replaceWithValue: expanded\n      })\n    }\n  })\n\n  found.reverse().forEach(item => {\n    const spliceArgs = [ item.index, 1 ].concat(item.replaceWithValue)\n    array.splice.apply(array, spliceArgs)\n  })\n\n  return array\n}\n","'use strict'\n\n/**\n * Some useful tools for working with `process.argv`.\n *\n * @module argv-tools\n * @typicalName argvTools\n * @example\n * const argvTools = require('argv-tools')\n */\n\n/**\n * Regular expressions for matching option formats.\n * @static\n */\nconst re = {\n  short: /^-([^\\d-])$/,\n  long: /^--(\\S+)/,\n  combinedShort: /^-[^\\d-]{2,}$/,\n  optEquals: /^(--\\S+?)=(.*)/\n}\n\n/**\n * Array subclass encapsulating common operations on `process.argv`.\n * @static\n */\nclass ArgvArray extends Array {\n  /**\n   * Clears the array has loads the supplied input.\n   * @param {string[]} argv - The argv list to load. Defaults to `process.argv`.\n   */\n  load (argv) {\n    const arrayify = require('array-back')\n    this.clear()\n    if (argv && argv !== process.argv) {\n      argv = arrayify(argv)\n    } else {\n      /* if no argv supplied, assume we are parsing process.argv */\n      argv = process.argv.slice(0)\n      argv.splice(0, 2)\n    }\n    argv.forEach(arg => this.push(String(arg)))\n  }\n\n  /**\n   * Clear the array.\n   */\n  clear () {\n    this.length = 0\n  }\n\n  /**\n   * expand ``--option=value` style args.\n   */\n  expandOptionEqualsNotation () {\n    if (this.some(arg => re.optEquals.test(arg))) {\n      const expandedArgs = []\n      this.forEach(arg => {\n        const matches = arg.match(re.optEquals)\n        if (matches) {\n          expandedArgs.push(matches[1], matches[2])\n        } else {\n          expandedArgs.push(arg)\n        }\n      })\n      this.clear()\n      this.load(expandedArgs)\n    }\n  }\n\n  /**\n   * expand getopt-style combinedShort options.\n   */\n  expandGetoptNotation () {\n    if (this.hasCombinedShortOptions()) {\n      const findReplace = require('find-replace')\n      findReplace(this, re.combinedShort, expandCombinedShortArg)\n    }\n  }\n\n  /**\n   * Returns true if the array contains combined short options (e.g. `-ab`).\n   * @returns {boolean}\n   */\n  hasCombinedShortOptions () {\n    return this.some(arg => re.combinedShort.test(arg))\n  }\n\n  static from (argv) {\n    const result = new this()\n    result.load(argv)\n    return result\n  }\n}\n\n/**\n * Expand a combined short option.\n * @param {string} - the string to expand, e.g. `-ab`\n * @returns {string[]}\n * @static\n */\nfunction expandCombinedShortArg (arg) {\n  /* remove initial hypen */\n  arg = arg.slice(1)\n  return arg.split('').map(letter => '-' + letter)\n}\n\n/**\n * Returns true if the supplied arg matches `--option=value` notation.\n * @param {string} - the arg to test, e.g. `--one=something`\n * @returns {boolean}\n * @static\n */\nfunction isOptionEqualsNotation (arg) {\n  return re.optEquals.test(arg)\n}\n\n/**\n * Returns true if the supplied arg is in either long (`--one`) or short (`-o`) format.\n * @param {string} - the arg to test, e.g. `--one`\n * @returns {boolean}\n * @static\n */\nfunction isOption (arg) {\n  return (re.short.test(arg) || re.long.test(arg)) && !re.optEquals.test(arg)\n}\n\n/**\n * Returns true if the supplied arg is in long (`--one`) format.\n * @param {string} - the arg to test, e.g. `--one`\n * @returns {boolean}\n * @static\n */\nfunction isLongOption (arg) {\n  return re.long.test(arg) && !isOptionEqualsNotation(arg)\n}\n\n/**\n * Returns the name from a long, short or `--options=value` arg.\n * @param {string} - the arg to inspect, e.g. `--one`\n * @returns {string}\n * @static\n */\nfunction getOptionName (arg) {\n  if (re.short.test(arg)) {\n    return arg.match(re.short)[1]\n  } else if (isLongOption(arg)) {\n    return arg.match(re.long)[1]\n  } else if (isOptionEqualsNotation(arg)) {\n    return arg.match(re.optEquals)[1].replace(/^--/, '')\n  } else {\n    return null\n  }\n}\n\nexports.expandCombinedShortArg = expandCombinedShortArg\nexports.re = re\nexports.ArgvArray = ArgvArray\nexports.getOptionName = getOptionName\nexports.isOption = isOption\nexports.isLongOption = isLongOption\nexports.isOptionEqualsNotation = isOptionEqualsNotation\nexports.isValue = arg => !(isOption(arg) || re.combinedShort.test(arg) || re.optEquals.test(arg))\n","'use strict'\nconst t = require('typical')\n\n/**\n * @module option-definition\n */\n\n/**\n * Describes a command-line option. Additionally, if generating a usage guide with [command-line-usage](https://github.com/75lb/command-line-usage) you could optionally add `description` and `typeLabel` properties to each definition.\n *\n * @alias module:option-definition\n * @typicalname option\n */\nclass OptionDefinition {\n  constructor (definition) {\n    /**\n    * The only required definition property is `name`, so the simplest working example is\n    * ```js\n    * const optionDefinitions = [\n    *   { name: 'file' },\n    *   { name: 'depth' }\n    * ]\n    * ```\n    *\n    * Where a `type` property is not specified it will default to `String`.\n    *\n    * | #   | Command line args | .parse() output |\n    * | --- | -------------------- | ------------ |\n    * | 1   | `--file` | `{ file: null }` |\n    * | 2   | `--file lib.js` | `{ file: 'lib.js' }` |\n    * | 3   | `--depth 2` | `{ depth: '2' }` |\n    *\n    * Unicode option names and aliases are valid, for example:\n    * ```js\n    * const optionDefinitions = [\n    *   { name: 'один' },\n    *   { name: '两' },\n    *   { name: 'три', alias: 'т' }\n    * ]\n    * ```\n    * @type {string}\n    */\n    this.name = definition.name\n\n    /**\n    * The `type` value is a setter function (you receive the output from this), enabling you to be specific about the type and value received.\n    *\n    * The most common values used are `String` (the default), `Number` and `Boolean` but you can use a custom function, for example:\n    *\n    * ```js\n    * const fs = require('fs')\n    *\n    * class FileDetails {\n    *   constructor (filename) {\n    *     this.filename = filename\n    *     this.exists = fs.existsSync(filename)\n    *   }\n    * }\n    *\n    * const cli = commandLineArgs([\n    *   { name: 'file', type: filename => new FileDetails(filename) },\n    *   { name: 'depth', type: Number }\n    * ])\n    * ```\n    *\n    * | #   | Command line args| .parse() output |\n    * | --- | ----------------- | ------------ |\n    * | 1   | `--file asdf.txt` | `{ file: { filename: 'asdf.txt', exists: false } }` |\n    *\n    * The `--depth` option expects a `Number`. If no value was set, you will receive `null`.\n    *\n    * | #   | Command line args | .parse() output |\n    * | --- | ----------------- | ------------ |\n    * | 2   | `--depth` | `{ depth: null }` |\n    * | 3   | `--depth 2` | `{ depth: 2 }` |\n    *\n    * @type {function}\n    * @default String\n    */\n    this.type = definition.type || String\n\n    /**\n    * getopt-style short option names. Can be any single character (unicode included) except a digit or hyphen.\n    *\n    * ```js\n    * const optionDefinitions = [\n    *   { name: 'hot', alias: 'h', type: Boolean },\n    *   { name: 'discount', alias: 'd', type: Boolean },\n    *   { name: 'courses', alias: 'c' , type: Number }\n    * ]\n    * ```\n    *\n    * | #   | Command line | .parse() output |\n    * | --- | ------------ | ------------ |\n    * | 1   | `-hcd` | `{ hot: true, courses: null, discount: true }` |\n    * | 2   | `-hdc 3` | `{ hot: true, discount: true, courses: 3 }` |\n    *\n    * @type {string}\n    */\n    this.alias = definition.alias\n\n    /**\n    * Set this flag if the option takes a list of values. You will receive an array of values, each passed through the `type` function (if specified).\n    *\n    * ```js\n    * const optionDefinitions = [\n    *   { name: 'files', type: String, multiple: true }\n    * ]\n    * ```\n    *\n    * Note, examples 1 and 3 below demonstrate \"greedy\" parsing which can be disabled by using `lazyMultiple`.\n    *\n    * | #   | Command line | .parse() output |\n    * | --- | ------------ | ------------ |\n    * | 1   | `--files one.js two.js` | `{ files: [ 'one.js', 'two.js' ] }` |\n    * | 2   | `--files one.js --files two.js` | `{ files: [ 'one.js', 'two.js' ] }` |\n    * | 3   | `--files *` | `{ files: [ 'one.js', 'two.js' ] }` |\n    *\n    * @type {boolean}\n    */\n    this.multiple = definition.multiple\n\n    /**\n     * Identical to `multiple` but with greedy parsing disabled.\n     *\n     * ```js\n     * const optionDefinitions = [\n     *   { name: 'files', lazyMultiple: true },\n     *   { name: 'verbose', alias: 'v', type: Boolean, lazyMultiple: true }\n     * ]\n     * ```\n     *\n     * | #   | Command line | .parse() output |\n     * | --- | ------------ | ------------ |\n     * | 1   | `--files one.js --files two.js` | `{ files: [ 'one.js', 'two.js' ] }` |\n     * | 2   | `-vvv` | `{ verbose: [ true, true, true ] }` |\n     *\n     * @type {boolean}\n     */\n    this.lazyMultiple = definition.lazyMultiple\n\n    /**\n    * Any values unaccounted for by an option definition will be set on the `defaultOption`. This flag is typically set on the most commonly-used option to make for more concise usage (i.e. `$ example *.js` instead of `$ example --files *.js`).\n    *\n    * ```js\n    * const optionDefinitions = [\n    *   { name: 'files', multiple: true, defaultOption: true }\n    * ]\n    * ```\n    *\n    * | #   | Command line | .parse() output |\n    * | --- | ------------ | ------------ |\n    * | 1   | `--files one.js two.js` | `{ files: [ 'one.js', 'two.js' ] }` |\n    * | 2   | `one.js two.js` | `{ files: [ 'one.js', 'two.js' ] }` |\n    * | 3   | `*` | `{ files: [ 'one.js', 'two.js' ] }` |\n    *\n    * @type {boolean}\n    */\n    this.defaultOption = definition.defaultOption\n\n    /**\n    * An initial value for the option.\n    *\n    * ```js\n    * const optionDefinitions = [\n    *   { name: 'files', multiple: true, defaultValue: [ 'one.js' ] },\n    *   { name: 'max', type: Number, defaultValue: 3 }\n    * ]\n    * ```\n    *\n    * | #   | Command line | .parse() output |\n    * | --- | ------------ | ------------ |\n    * | 1   |  | `{ files: [ 'one.js' ], max: 3 }` |\n    * | 2   | `--files two.js` | `{ files: [ 'two.js' ], max: 3 }` |\n    * | 3   | `--max 4` | `{ files: [ 'one.js' ], max: 4 }` |\n    *\n    * @type {*}\n    */\n    this.defaultValue = definition.defaultValue\n\n    /**\n    * When your app has a large amount of options it makes sense to organise them in groups.\n    *\n    * There are two automatic groups: `_all` (contains all options) and `_none` (contains options without a `group` specified in their definition).\n    *\n    * ```js\n    * const optionDefinitions = [\n    *   { name: 'verbose', group: 'standard' },\n    *   { name: 'help', group: [ 'standard', 'main' ] },\n    *   { name: 'compress', group: [ 'server', 'main' ] },\n    *   { name: 'static', group: 'server' },\n    *   { name: 'debug' }\n    * ]\n    * ```\n    *\n    *<table>\n    *  <tr>\n    *    <th>#</th><th>Command Line</th><th>.parse() output</th>\n    *  </tr>\n    *  <tr>\n    *    <td>1</td><td><code>--verbose</code></td><td><pre><code>\n    *{\n    *  _all: { verbose: true },\n    *  standard: { verbose: true }\n    *}\n    *</code></pre></td>\n    *  </tr>\n    *  <tr>\n    *    <td>2</td><td><code>--debug</code></td><td><pre><code>\n    *{\n    *  _all: { debug: true },\n    *  _none: { debug: true }\n    *}\n    *</code></pre></td>\n    *  </tr>\n    *  <tr>\n    *    <td>3</td><td><code>--verbose --debug --compress</code></td><td><pre><code>\n    *{\n    *  _all: {\n    *    verbose: true,\n    *    debug: true,\n    *    compress: true\n    *  },\n    *  standard: { verbose: true },\n    *  server: { compress: true },\n    *  main: { compress: true },\n    *  _none: { debug: true }\n    *}\n    *</code></pre></td>\n    *  </tr>\n    *  <tr>\n    *    <td>4</td><td><code>--compress</code></td><td><pre><code>\n    *{\n    *  _all: { compress: true },\n    *  server: { compress: true },\n    *  main: { compress: true }\n    *}\n    *</code></pre></td>\n    *  </tr>\n    *</table>\n    *\n    * @type {string|string[]}\n    */\n    this.group = definition.group\n\n    /* pick up any remaining properties */\n    for (let prop in definition) {\n      if (!this[prop]) this[prop] = definition[prop]\n    }\n  }\n\n  isBoolean () {\n    return this.type === Boolean || (t.isFunction(this.type) && this.type.name === 'Boolean')\n  }\n  isMultiple () {\n    return this.multiple || this.lazyMultiple\n  }\n\n  static create (def) {\n    const result = new this(def)\n    return result\n  }\n}\n\nmodule.exports = OptionDefinition\n","'use strict'\nconst arrayify = require('array-back')\nconst argvTools = require('argv-tools')\nconst t = require('typical')\n\n/**\n * @module option-definitions\n */\n\n/**\n * @alias module:option-definitions\n */\nclass Definitions extends Array {\n  /**\n   * validate option definitions\n   * @returns {string}\n   */\n  validate () {\n    const someHaveNoName = this.some(def => !def.name)\n    if (someHaveNoName) {\n      halt(\n        'INVALID_DEFINITIONS',\n        'Invalid option definitions: the `name` property is required on each definition'\n      )\n    }\n\n    const someDontHaveFunctionType = this.some(def => def.type && typeof def.type !== 'function')\n    if (someDontHaveFunctionType) {\n      halt(\n        'INVALID_DEFINITIONS',\n        'Invalid option definitions: the `type` property must be a setter fuction (default: `Boolean`)'\n      )\n    }\n\n    let invalidOption\n\n    const numericAlias = this.some(def => {\n      invalidOption = def\n      return t.isDefined(def.alias) && t.isNumber(def.alias)\n    })\n    if (numericAlias) {\n      halt(\n        'INVALID_DEFINITIONS',\n        'Invalid option definition: to avoid ambiguity an alias cannot be numeric [--' + invalidOption.name + ' alias is -' + invalidOption.alias + ']'\n      )\n    }\n\n    const multiCharacterAlias = this.some(def => {\n      invalidOption = def\n      return t.isDefined(def.alias) && def.alias.length !== 1\n    })\n    if (multiCharacterAlias) {\n      halt(\n        'INVALID_DEFINITIONS',\n        'Invalid option definition: an alias must be a single character'\n      )\n    }\n\n    const hypenAlias = this.some(def => {\n      invalidOption = def\n      return def.alias === '-'\n    })\n    if (hypenAlias) {\n      halt(\n        'INVALID_DEFINITIONS',\n        'Invalid option definition: an alias cannot be \"-\"'\n      )\n    }\n\n    const duplicateName = hasDuplicates(this.map(def => def.name))\n    if (duplicateName) {\n      halt(\n        'INVALID_DEFINITIONS',\n        'Two or more option definitions have the same name'\n      )\n    }\n\n    const duplicateAlias = hasDuplicates(this.map(def => def.alias))\n    if (duplicateAlias) {\n      halt(\n        'INVALID_DEFINITIONS',\n        'Two or more option definitions have the same alias'\n      )\n    }\n\n    const duplicateDefaultOption = hasDuplicates(this.map(def => def.defaultOption))\n    if (duplicateDefaultOption) {\n      halt(\n        'INVALID_DEFINITIONS',\n        'Only one option definition can be the defaultOption'\n      )\n    }\n\n    const defaultBoolean = this.some(def => {\n      invalidOption = def\n      return def.isBoolean() && def.defaultOption\n    })\n    if (defaultBoolean) {\n      halt(\n        'INVALID_DEFINITIONS',\n        `A boolean option [\"${invalidOption.name}\"] can not also be the defaultOption.`\n      )\n    }\n  }\n\n  /**\n   * Get definition by option arg (e.g. `--one` or `-o`)\n   * @param {string}\n   * @returns {Definition}\n   */\n  get (arg) {\n    if (argvTools.isOption(arg)) {\n      return argvTools.re.short.test(arg)\n        ? this.find(def => def.alias === argvTools.getOptionName(arg))\n        : this.find(def => def.name === argvTools.getOptionName(arg))\n    } else {\n      return this.find(def => def.name === arg)\n    }\n  }\n\n  getDefault () {\n    return this.find(def => def.defaultOption === true)\n  }\n\n  isGrouped () {\n    return this.some(def => def.group)\n  }\n\n  whereGrouped () {\n    return this.filter(containsValidGroup)\n  }\n  whereNotGrouped () {\n    return this.filter(def => !containsValidGroup(def))\n  }\n  whereDefaultValueSet () {\n    return this.filter(def => t.isDefined(def.defaultValue))\n  }\n\n  static from (definitions) {\n    if (definitions instanceof this) return definitions\n    const Definition = require('./option-definition')\n    const result = super.from(arrayify(definitions), def => Definition.create(def))\n    result.validate()\n    return result\n  }\n}\n\nfunction halt (name, message) {\n  const err = new Error(message)\n  err.name = name\n  throw err\n}\n\nfunction containsValidGroup (def) {\n  return arrayify(def.group).some(group => group)\n}\n\nfunction hasDuplicates (array) {\n  const items = {}\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i]\n    if (items[value]) {\n      return true\n    } else {\n      if (t.isDefined(value)) items[value] = true\n    }\n  }\n}\n\nmodule.exports = Definitions\n","'use strict'\nconst argvTools = require('argv-tools')\n\n/**\n * @module argv-parser\n */\n\n/**\n * @alias module:argv-parser\n */\nclass ArgvParser {\n  /**\n   * @param {OptionDefinitions} - Definitions array\n   * @param {object} [options] - Options\n   * @param {string[]} [options.argv] - Overrides `process.argv`\n   * @param {boolean} [options.stopAtFirstUnknown] -\n   */\n  constructor (definitions, options) {\n    this.options = Object.assign({}, options)\n    const Definitions = require('./option-definitions')\n    /**\n     * Option Definitions\n     */\n    this.definitions = Definitions.from(definitions)\n\n    /**\n     * Argv\n     */\n    this.argv = argvTools.ArgvArray.from(this.options.argv)\n    if (this.argv.hasCombinedShortOptions()) {\n      const findReplace = require('find-replace')\n      findReplace(this.argv, argvTools.re.combinedShort, arg => {\n        arg = arg.slice(1)\n        return arg.split('').map(letter => ({ origArg: `-${arg}`, arg: '-' + letter }))\n      })\n    }\n  }\n\n  /**\n   * Yields one `{ event, name, value, arg, def }` argInfo object for each arg in `process.argv` (or `options.argv`).\n   */\n  * [Symbol.iterator] () {\n    const definitions = this.definitions\n    const t = require('typical')\n\n    let def\n    let value\n    let name\n    let event\n    let singularDefaultSet = false\n    let unknownFound = false\n    let origArg\n\n    for (let arg of this.argv) {\n      if (t.isPlainObject(arg)) {\n        origArg = arg.origArg\n        arg = arg.arg\n      }\n\n      if (unknownFound && this.options.stopAtFirstUnknown) {\n        yield { event: 'unknown_value', arg, name: '_unknown', value: undefined }\n        continue\n      }\n\n      /* handle long or short option */\n      if (argvTools.isOption(arg)) {\n        def = definitions.get(arg)\n        value = undefined\n        if (def) {\n          value = def.isBoolean() ? true : null\n          event = 'set'\n        } else {\n          event = 'unknown_option'\n        }\n\n      /* handle --option-value notation */\n    } else if (argvTools.isOptionEqualsNotation(arg)) {\n        const matches = arg.match(argvTools.re.optEquals)\n        def = definitions.get(matches[1])\n        if (def) {\n          if (def.isBoolean()) {\n            yield { event: 'unknown_value', arg, name: '_unknown', value, def }\n            event = 'set'\n            value = true\n          } else {\n            event = 'set'\n            value = matches[2]\n          }\n        } else {\n          event = 'unknown_option'\n        }\n\n      /* handle value */\n    } else if (argvTools.isValue(arg)) {\n        if (def) {\n          value = arg\n          event = 'set'\n        } else {\n          /* get the defaultOption */\n          def = this.definitions.getDefault()\n          if (def && !singularDefaultSet) {\n            value = arg\n            event = 'set'\n          } else {\n            event = 'unknown_value'\n            def = undefined\n          }\n        }\n      }\n\n      name = def ? def.name : '_unknown'\n      const argInfo = { event, arg, name, value, def }\n      if (origArg) {\n        argInfo.subArg = arg\n        argInfo.arg = origArg\n      }\n      yield argInfo\n\n      /* unknownFound logic */\n      if (name === '_unknown') unknownFound = true\n\n      /* singularDefaultSet logic */\n      if (def && def.defaultOption && !def.isMultiple() && event === 'set') singularDefaultSet = true\n\n      /* reset values once consumed and yielded */\n      if (def && def.isBoolean()) def = undefined\n      /* reset the def if it's a singular which has been set */\n      if (def && !def.multiple && t.isDefined(value) && value !== null) {\n        def = undefined\n      }\n      value = undefined\n      event = undefined\n      name = undefined\n      origArg = undefined\n    }\n  }\n}\n\nmodule.exports = ArgvParser\n","'use strict'\nconst Option = require('./option')\n\nclass FlagOption extends Option {\n  set (val) {\n    super.set(true)\n  }\n\n  static create (def) {\n    return new this(def)\n  }\n}\n\nmodule.exports = FlagOption\n","'use strict'\nconst _value = new WeakMap()\nconst arrayify = require('array-back')\nconst t = require('typical')\nconst Definition = require('./option-definition')\n\n/**\n * Encapsulates behaviour (defined by an OptionDefinition) when setting values\n */\nclass Option {\n  constructor (definition) {\n    this.definition = new Definition(definition)\n    this.state = null /* set or default */\n    this.resetToDefault()\n  }\n\n  get () {\n    return _value.get(this)\n  }\n\n  set (val) {\n    this._set(val, 'set')\n  }\n\n  _set (val, state) {\n    const def = this.definition\n    if (def.isMultiple()) {\n      /* don't add null or undefined to a multiple */\n      if (val !== null && val !== undefined) {\n        const arr = this.get()\n        if (this.state === 'default') arr.length = 0\n        arr.push(def.type(val))\n        this.state = state\n      }\n    } else {\n      /* throw if already set on a singlar defaultOption */\n      if (!def.isMultiple() && this.state === 'set') {\n        const err = new Error(`Singular option already set [${this.definition.name}=${this.get()}]`)\n        err.name = 'ALREADY_SET'\n        err.value = val\n        err.optionName = def.name\n        throw err\n      } else if (val === null || val === undefined) {\n        _value.set(this, val)\n        // /* required to make 'partial: defaultOption with value equal to defaultValue 2' pass */\n        // if (!(def.defaultOption && !def.isMultiple())) {\n        //   this.state = state\n        // }\n      } else {\n        _value.set(this, def.type(val))\n        this.state = state\n      }\n    }\n  }\n\n  resetToDefault () {\n    if (t.isDefined(this.definition.defaultValue)) {\n      if (this.definition.isMultiple()) {\n        _value.set(this, arrayify(this.definition.defaultValue).slice())\n      } else {\n        _value.set(this, this.definition.defaultValue)\n      }\n    } else {\n      if (this.definition.isMultiple()) {\n        _value.set(this, [])\n      } else {\n        _value.set(this, null)\n      }\n    }\n    this.state = 'default'\n  }\n\n  static create (definition) {\n    definition = new Definition(definition)\n    if (definition.isBoolean()) {\n      return require('./option-flag').create(definition)\n    } else {\n      return new this(definition)\n    }\n  }\n}\n\nmodule.exports = Option\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n","'use strict'\nconst Option = require('./option')\n\n/**\n * A map of { DefinitionNameString: Option }. By default, an Output has an `_unknown` property and any options with defaultValues.\n */\nclass Output extends Map {\n  constructor (definitions) {\n    super()\n    const Definitions = require('./option-definitions')\n    /**\n     * @type {OptionDefinitions}\n     */\n    this.definitions = Definitions.from(definitions)\n\n    /* by default, an Output has an `_unknown` property and any options with defaultValues */\n    this.set('_unknown', Option.create({ name: '_unknown', multiple: true }))\n    for (const def of this.definitions.whereDefaultValueSet()) {\n      this.set(def.name, Option.create(def))\n    }\n  }\n\n  toObject (options) {\n    const camelCase = require('lodash.camelcase')\n    options = options || {}\n    const output = {}\n    for (const item of this) {\n      const name = options.camelCase && item[0] !== '_unknown' ? camelCase(item[0]) : item[0]\n      const option = item[1]\n      if (name === '_unknown' && !option.get().length) continue\n      output[name] = option.get()\n    }\n\n    if (options.skipUnknown) delete output._unknown\n    return output\n  }\n}\n\nmodule.exports = Output\n","'use strict'\nconst Output = require('./output')\n\nclass GroupedOutput extends Output {\n  toObject (options) {\n    const arrayify = require('array-back')\n    const t = require('typical')\n    const camelCase = require('lodash.camelcase')\n    const superOutputNoCamel = super.toObject({ skipUnknown: options.skipUnknown })\n    const superOutput = super.toObject(options)\n    const unknown = superOutput._unknown\n    delete superOutput._unknown\n    const grouped = {\n      _all: superOutput\n    }\n    if (unknown && unknown.length) grouped._unknown = unknown\n\n    this.definitions.whereGrouped().forEach(def => {\n      const name = options.camelCase ? camelCase(def.name) : def.name\n      const outputValue = superOutputNoCamel[def.name]\n      for (const groupName of arrayify(def.group)) {\n        grouped[groupName] = grouped[groupName] || {}\n        if (t.isDefined(outputValue)) {\n          grouped[groupName][name] = outputValue\n        }\n      }\n    })\n\n    this.definitions.whereNotGrouped().forEach(def => {\n      const name = options.camelCase ? camelCase(def.name) : def.name\n      const outputValue = superOutputNoCamel[def.name]\n      if (t.isDefined(outputValue)) {\n        if (!grouped._none) grouped._none = {}\n        grouped._none[name] = outputValue\n      }\n    })\n    return grouped\n  }\n}\n\nmodule.exports = GroupedOutput\n","'use strict'\n\n/**\n * @module command-line-args\n */\nmodule.exports = commandLineArgs\n\n/**\n * Returns an object containing all option values set on the command line. By default it parses the global  [`process.argv`](https://nodejs.org/api/process.html#process_process_argv) array.\n *\n * Parsing is strict by default - an exception is thrown if the user sets a singular option more than once or sets an unknown value or option (one without a valid [definition](https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md)). To be more permissive, enabling [partial](https://github.com/75lb/command-line-args/wiki/Partial-mode-example) or [stopAtFirstUnknown](https://github.com/75lb/command-line-args/wiki/stopAtFirstUnknown) modes will return known options in the usual manner while collecting unknown arguments in a separate `_unknown` property.\n *\n * @param {module:definition[]} - An array of [OptionDefinition](https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md) objects\n * @param {object} [options] - Options.\n * @param {string[]} [options.argv] - An array of strings which, if present will be parsed instead  of `process.argv`.\n * @param {boolean} [options.partial] - If `true`, an array of unknown arguments is returned in the `_unknown` property of the output.\n * @param {boolean} [options.stopAtFirstUnknown] - If `true`, parsing will stop at the first unknown argument and the remaining arguments returned in `_unknown`. When set, `partial: true` is also implied.\n * @param {boolean} [options.camelCase] - If `true`, options with hypenated names (e.g. `move-to`) will be returned in camel-case (e.g. `moveTo`).\n * @returns {object}\n * @throws `UNKNOWN_OPTION` If `options.partial` is false and the user set an undefined option. The `err.optionName` property contains the arg that specified an unknown option, e.g. `--one`.\n * @throws `UNKNOWN_VALUE` If `options.partial` is false and the user set a value unaccounted for by an option definition. The `err.value` property contains the unknown value, e.g. `5`.\n * @throws `ALREADY_SET` If a user sets a singular, non-multiple option more than once. The `err.optionName` property contains the option name that has already been set, e.g. `one`.\n * @throws `INVALID_DEFINITIONS`\n *   - If an option definition is missing the required `name` property\n *   - If an option definition has a `type` value that's not a function\n *   - If an alias is numeric, a hyphen or a length other than 1\n *   - If an option definition name was used more than once\n *   - If an option definition alias was used more than once\n *   - If more than one option definition has `defaultOption: true`\n *   - If a `Boolean` option is also set as the `defaultOption`.\n * @alias module:command-line-args\n */\nfunction commandLineArgs (optionDefinitions, options) {\n  options = options || {}\n  if (options.stopAtFirstUnknown) options.partial = true\n  const Definitions = require('./lib/option-definitions')\n  optionDefinitions = Definitions.from(optionDefinitions)\n\n  const ArgvParser = require('./lib/argv-parser')\n  const parser = new ArgvParser(optionDefinitions, {\n    argv: options.argv,\n    stopAtFirstUnknown: options.stopAtFirstUnknown\n  })\n\n  const Option = require('./lib/option')\n  const OutputClass = optionDefinitions.isGrouped() ? require('./lib/output-grouped') : require('./lib/output')\n  const output = new OutputClass(optionDefinitions)\n\n  /* Iterate the parser setting each known value to the output. Optionally, throw on unknowns. */\n  for (const argInfo of parser) {\n    const arg = argInfo.subArg || argInfo.arg\n    if (!options.partial) {\n      if (argInfo.event === 'unknown_value') {\n        const err = new Error(`Unknown value: ${arg}`)\n        err.name = 'UNKNOWN_VALUE'\n        err.value = arg\n        throw err\n      } else if (argInfo.event === 'unknown_option') {\n        const err = new Error(`Unknown option: ${arg}`)\n        err.name = 'UNKNOWN_OPTION'\n        err.optionName = arg\n        throw err\n      }\n    }\n\n    let option\n    if (output.has(argInfo.name)) {\n      option = output.get(argInfo.name)\n    } else {\n      option = Option.create(argInfo.def)\n      output.set(argInfo.name, option)\n    }\n\n    if (argInfo.name === '_unknown') {\n      option.set(arg)\n    } else {\n      option.set(argInfo.value)\n    }\n  }\n\n  return output.toObject({ skipUnknown: !options.partial, camelCase: options.camelCase })\n}\n","// commands\nexport const DECENTRALIZE = 'decentralize'\nexport const PRUNE = 'prune'\n\n// VUE i18n REGEX\nexport const VUE_I18N_REGEX_FUNC_CALLER = /\\$t\\((.+)\\)/g","import {\n  DECENTRALIZE,\n  PRUNE,\n  SOURCE,\n  LOCALES_FOLDER\n} from '~/constants'\n\nconst availableCommands = command => {\n  switch (command) {\n    case DECENTRALIZE:\n    case PRUNE:\n      return command\n    default:\n      return\n  }\n}\n\nexport default [\n  { name: 'command', defaultOption: true, type: availableCommands },\n  {\n    name: 'source',\n    alias: 's',\n    description: 'The input files to process',\n    multiple: true,\n    typeLabel: '{underline file}|{underline folder} {bold multiple}',\n  },\n  {\n    name: 'localesFolder',\n    alias: 'l',\n    description: 'Folder containing the vue-i18n json files',\n    typeLabel: '{underline folder}'\n  },\n  {\n    name: 'output',\n    alias: 'o',\n    description: 'Folder where to write the output, if undefined source files will be overwritten',\n    typeLabel: '{underline folder}'\n  }\n]","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","const chalk = require('chalk')\n\nfunction format (str) {\n  return chalk(Object.assign([], { raw: [ str ] }))\n}\n\nfunction chalkFormat (str) {\n  if (str) {\n    str = str.replace(/`/g, '\\\\`')\n    return format(str)\n  } else {\n    return ''\n  }\n}\n\nmodule.exports = chalkFormat\n","'use strict'\n\nclass Section {\n  constructor () {\n    this.list = []\n  }\n  add (content) {\n    const chalkFormat = require('./chalk-format')\n    const arrayify = require('array-back')\n    arrayify(content).forEach(line => this.list.push(line))\n  }\n  emptyLine () {\n    this.list.push('')\n  }\n  header (text) {\n    const chalk = require('chalk')\n    if (text) {\n      this.add(chalk.underline.bold(text))\n      this.emptyLine()\n    }\n  }\n  toString () {\n    const os = require('os')\n    return this.list.join(os.EOL)\n  }\n}\n\nmodule.exports = Section\n","/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2018 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n\treturn (\n\t\tval instanceof Buffer\n\t\t|| val instanceof Date\n\t\t|| val instanceof RegExp\n\t) ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n\tif (val instanceof Buffer) {\n\t\tvar x = Buffer.alloc\n\t\t\t? Buffer.alloc(val.length)\n\t\t\t: new Buffer(val.length);\n\t\tval.copy(x);\n\t\treturn x;\n\t} else if (val instanceof Date) {\n\t\treturn new Date(val.getTime());\n\t} else if (val instanceof RegExp) {\n\t\treturn new RegExp(val);\n\t} else {\n\t\tthrow new Error('Unexpected situation');\n\t}\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n\tvar clone = [];\n\tarr.forEach(function (item, index) {\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t} else {\n\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t}\n\t\t} else {\n\t\t\tclone[index] = item;\n\t\t}\n\t});\n\treturn clone;\n}\n\nfunction safeGetProperty(object, property) {\n\treturn property === '__proto__' ? undefined : object[property];\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (arguments.length < 2) {\n\t\treturn arguments[0];\n\t}\n\n\tvar target = arguments[0];\n\n\t// convert arguments to array and cut off target object\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar val, src, clone;\n\n\targs.forEach(function (obj) {\n\t\t// skip argument if isn't an object, is null, or is an array\n\t\tif (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(obj).forEach(function (key) {\n\t\t\tsrc = safeGetProperty(target, key); // source value\n\t\t\tval = safeGetProperty(obj, key); // new value\n\n\t\t\t// recursion prevention\n\t\t\tif (val === target) {\n\t\t\t\treturn;\n\n\t\t\t/**\n\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t * instead of extending.\n\t\t\t */\n\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\ttarget[key] = val;\n\t\t\t\treturn;\n\n\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\treturn;\n\n\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\treturn;\n\n\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\treturn;\n\n\t\t\t// source value and new value is objects both, extending...\n\t\t\t} else {\n\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn target;\n};\n","'use strict'\nconst t = require('typical')\n\nconst _value = new WeakMap()\nconst _column = new WeakMap()\n\nclass Cell {\n  constructor (value, column) {\n    this.value = value\n    _column.set(this, column)\n  }\n\n  set value (val) {\n    _value.set(this, val)\n  }\n\n  get value () {\n    let cellValue = _value.get(this)\n    if (t.isFunction(cellValue)) cellValue = cellValue.call(_column.get(this))\n    if (cellValue === undefined) {\n      cellValue = ''\n    } else {\n      cellValue = String(cellValue)\n    }\n    return cellValue\n  }\n}\n\nmodule.exports = Cell\n","'use strict'\nconst arrayify = require('array-back')\nconst Cell = require('./cell')\nconst t = require('typical')\n\n/**\n *\n */\nclass Rows {\n  constructor (rows, columns) {\n    this.list = []\n    this.load(rows, columns)\n  }\n\n  load (rows, columns) {\n    arrayify(rows).forEach(row => {\n      this.list.push(new Map(objectToIterable(row, columns)))\n    })\n  }\n\n  static removeEmptyColumns (data) {\n    const distinctColumnNames = data.reduce((columnNames, row) => {\n      Object.keys(row).forEach(key => {\n        if (columnNames.indexOf(key) === -1) columnNames.push(key)\n      })\n      return columnNames\n    }, [])\n\n    const emptyColumns = distinctColumnNames.filter(columnName => {\n      const hasValue = data.some(row => {\n        const value = row[columnName]\n        return (t.isDefined(value) && !t.isString(value)) || (t.isString(value) && /\\S+/.test(value))\n      })\n      return !hasValue\n    })\n\n    return data.map(row => {\n      emptyColumns.forEach(emptyCol => delete row[emptyCol])\n      return row\n    })\n  }\n}\n\nfunction objectToIterable (row, columns) {\n  return columns.list.map(column => {\n    return [ column, new Cell(row[column.name], column) ]\n  })\n}\n\n/**\n * @module rows\n */\nmodule.exports = Rows\n","'use strict'\n\nclass Padding {\n  constructor (padding) {\n    this.left = padding.left\n    this.right = padding.right\n  }\n  length () {\n    return this.left.length + this.right.length\n  }\n}\n\n/**\n@module padding\n*/\nmodule.exports = Padding\n","'use strict'\nconst t = require('typical')\nconst Padding = require('./padding')\n\n/**\n * @module column\n */\n\nconst _padding = new WeakMap()\n\n// setting any column property which is a factor of the width should trigger autoSize()\n\n/**\n * Represents a table column\n */\nclass Column {\n  constructor (column) {\n    /**\n     * @type {string}\n     */\n    if (t.isDefined(column.name)) this.name = column.name\n    /**\n     * @type {number}\n     */\n    if (t.isDefined(column.width)) this.width = column.width\n    if (t.isDefined(column.maxWidth)) this.maxWidth = column.maxWidth\n    if (t.isDefined(column.minWidth)) this.minWidth = column.minWidth\n    if (t.isDefined(column.noWrap)) this.noWrap = column.noWrap\n    if (t.isDefined(column.break)) this.break = column.break\n    if (t.isDefined(column.contentWrappable)) this.contentWrappable = column.contentWrappable\n    if (t.isDefined(column.contentWidth)) this.contentWidth = column.contentWidth\n    if (t.isDefined(column.minContentWidth)) this.minContentWidth = column.minContentWidth\n    this.padding = column.padding || { left: ' ', right: ' ' }\n    this.generatedWidth = null\n  }\n\n  set padding (padding) {\n    _padding.set(this, new Padding(padding))\n  }\n  get padding () {\n    return _padding.get(this)\n  }\n\n  /**\n   * the width of the content (excluding padding) after being wrapped\n   */\n  get wrappedContentWidth () {\n    return Math.max(this.generatedWidth - this.padding.length(), 0)\n  }\n\n  isResizable () {\n    return !this.isFixed()\n  }\n\n  isFixed () {\n    return t.isDefined(this.width) || this.noWrap || !this.contentWrappable\n  }\n\n  generateWidth () {\n    this.generatedWidth = this.width || (this.contentWidth + this.padding.length())\n  }\n\n  generateMinWidth () {\n    this.minWidth = this.minContentWidth + this.padding.length()\n  }\n}\n\nmodule.exports = Column\n","'use strict'\n\n/**\n * Flatten an array into the supplied array.\n *\n * @module reduce-flatten\n * @example\n * var flatten = require('reduce-flatten')\n */\nmodule.exports = flatten\n\n/**\n * @alias module:reduce-flatten\n * @example\n * > numbers = [ 1, 2, [ 3, 4 ], 5 ]\n * > numbers.reduce(flatten, [])\n * [ 1, 2, 3, 4, 5 ]\n */\nfunction flatten (prev, curr) {\n  return prev.concat(curr)\n}\n","'use strict'\nconst os = require('os')\nconst t = require('typical')\n\n/**\n * @module wordwrapjs\n */\n\nconst re = {\n  chunk: /[^\\s-]+?-\\b|\\S+|\\s+|\\r\\n?|\\n/g,\n  ansiEscapeSequence: /\\u001b.*?m/g\n}\n\n/**\n * @alias module:wordwrapjs\n * @typicalname wordwrap\n */\nclass WordWrap {\n  constructor (text, options) {\n    options = options || {}\n    if (!t.isDefined(text)) text = ''\n\n    this._lines = String(text).split(/\\r\\n|\\n/g)\n    this.options = options\n    this.options.width = options.width === undefined ? 30 : options.width\n  }\n\n  lines () {\n    const flatten = require('reduce-flatten')\n\n    /* trim each line of the supplied text */\n    return this._lines.map(trimLine.bind(this))\n\n      /* split each line into an array of chunks, else mark it empty */\n      .map(line => line.match(re.chunk) || [ '~~empty~~' ])\n\n      /* optionally, break each word on the line into pieces */\n      .map(lineWords => {\n        if (this.options.break) {\n          return lineWords.map(breakWord.bind(this))\n        } else {\n          return lineWords\n        }\n      })\n      .map(lineWords => lineWords.reduce(flatten, []))\n\n      /* transforming the line of words to one or more new lines wrapped to size */\n      .map(lineWords => {\n        return lineWords\n          .reduce((lines, word) => {\n            let currentLine = lines[lines.length - 1]\n            if (replaceAnsi(word).length + replaceAnsi(currentLine).length > this.options.width) {\n              lines.push(word)\n            } else {\n              lines[lines.length - 1] += word\n            }\n            return lines\n          }, [ '' ])\n      })\n      .reduce(flatten, [])\n\n      /* trim the wrapped lines */\n      .map(trimLine.bind(this))\n\n      /* filter out empty lines */\n      .filter(line => line.trim())\n\n      /* restore the user's original empty lines */\n      .map(line => line.replace('~~empty~~', ''))\n  }\n\n  wrap () {\n    return this.lines().join(os.EOL)\n  }\n\n  toString () {\n    return this.wrap()\n  }\n\n  /**\n   * @param {string} - the input text to wrap\n   * @param [options] {object} - optional configuration\n   * @param [options.width] {number} - the max column width in characters (defaults to 30).\n   * @param [options.break] {boolean} - if true, words exceeding the specified `width` will be forcefully broken\n   * @param [options.noTrim] {boolean} - By default, each line output is trimmed. If `noTrim` is set, no line-trimming occurs - all whitespace from the input text is left in.\n   * @return {string}\n   */\n  static wrap (text, options) {\n    const block = new this(text, options)\n    return block.wrap()\n  }\n\n  /**\n   * Wraps the input text, returning an array of strings (lines).\n   * @param {string} - input text\n   * @param {object} - Accepts same options as constructor.\n   */\n  static lines (text, options) {\n    const block = new this(text, options)\n    return block.lines()\n  }\n\n  /**\n   * Returns true if the input text would be wrapped if passed into `.wrap()`.\n   * @param {string} - input text\n   * @return {boolean}\n   */\n  static isWrappable (text) {\n    if (t.isDefined(text)) {\n      text = String(text)\n      var matches = text.match(re.chunk)\n      return matches ? matches.length > 1 : false\n    }\n  }\n\n  /**\n   * Splits the input text into an array of words and whitespace.\n   * @param {string} - input text\n   * @returns {string[]}\n   */\n  static getChunks (text) {\n    return text.match(re.chunk) || []\n  }\n}\n\nfunction trimLine (line) {\n  return this.options.noTrim ? line : line.trim()\n}\n\nfunction replaceAnsi (string) {\n  return string.replace(re.ansiEscapeSequence, '')\n}\n\n/* break a word into several pieces */\nfunction breakWord (word) {\n  if (replaceAnsi(word).length > this.options.width) {\n    const letters = word.split('')\n    let piece\n    const pieces = []\n    while ((piece = letters.splice(0, this.options.width)).length) {\n      pieces.push(piece.join(''))\n    }\n    return pieces\n  } else {\n    return word\n  }\n}\n\nmodule.exports = WordWrap\n","'use strict'\n\nconst ansiEscapeSequence = /\\u001b.*?m/g\n\n/**\n * @module ansi\n */\nexports.remove = remove\nexports.has = has\n\nfunction remove (input) {\n  return input.replace(ansiEscapeSequence, '')\n}\n\nfunction has (input) {\n  return ansiEscapeSequence.test(input)\n}\n","'use strict'\nconst t = require('typical')\nconst arrayify = require('array-back')\nconst Column = require('./column')\nconst wrap = require('wordwrapjs')\nconst Cell = require('./cell')\nconst ansi = require('./ansi')\n\nconst _maxWidth = new WeakMap()\n\n/**\n * @module columns\n */\n\nclass Columns {\n  constructor (columns) {\n    this.list = []\n    arrayify(columns).forEach(this.add.bind(this))\n  }\n\n  /**\n   * sum of all generatedWidth fields\n   * @return {number}\n   */\n  totalWidth () {\n    return this.list.length\n      ? this.list.map(col => col.generatedWidth).reduce((a, b) => a + b)\n      : 0\n  }\n\n  totalFixedWidth () {\n    return this.getFixed()\n      .map(col => col.generatedWidth)\n      .reduce((a, b) => a + b, 0)\n  }\n\n  get (columnName) {\n    return this.list.find(column => column.name === columnName)\n  }\n\n  getResizable () {\n    return this.list.filter(column => column.isResizable())\n  }\n\n  getFixed () {\n    return this.list.filter(column => column.isFixed())\n  }\n\n  add (column) {\n    const col = column instanceof Column ? column : new Column(column)\n    this.list.push(col)\n    return col\n  }\n\n  set maxWidth (val) {\n    _maxWidth.set(this, val)\n  }\n\n  /**\n   * sets `generatedWidth` for each column\n   * @chainable\n   */\n  autoSize () {\n    const maxWidth = _maxWidth.get(this)\n\n    /* size */\n    this.list.forEach(column => {\n      column.generateWidth()\n      column.generateMinWidth()\n    })\n\n    /* adjust if user set a min or maxWidth */\n    this.list.forEach(column => {\n      if (t.isDefined(column.maxWidth) && column.generatedWidth > column.maxWidth) {\n        column.generatedWidth = column.maxWidth\n      }\n\n      if (t.isDefined(column.minWidth) && column.generatedWidth < column.minWidth) {\n        column.generatedWidth = column.minWidth\n      }\n    })\n\n    const width = {\n      total: this.totalWidth(),\n      view: maxWidth,\n      diff: this.totalWidth() - maxWidth,\n      totalFixed: this.totalFixedWidth(),\n      totalResizable: Math.max(maxWidth - this.totalFixedWidth(), 0)\n    }\n\n    /* adjust if short of space */\n    if (width.diff > 0) {\n      /* share the available space between resizeable columns */\n      let resizableColumns = this.getResizable()\n      resizableColumns.forEach(column => {\n        column.generatedWidth = Math.floor(width.totalResizable / resizableColumns.length)\n      })\n\n      /* at this point, the generatedWidth should never end up bigger than the contentWidth */\n      const grownColumns = this.list.filter(column => column.generatedWidth > column.contentWidth)\n      const shrunkenColumns = this.list.filter(column => column.generatedWidth < column.contentWidth)\n      let salvagedSpace = 0\n      grownColumns.forEach(column => {\n        const currentGeneratedWidth = column.generatedWidth\n        column.generateWidth()\n        salvagedSpace += currentGeneratedWidth - column.generatedWidth\n      })\n      shrunkenColumns.forEach(column => {\n        column.generatedWidth += Math.floor(salvagedSpace / shrunkenColumns.length)\n      })\n\n    /* if, after autosizing, we still don't fit within maxWidth then give up */\n    }\n\n    return this\n  }\n\n  /**\n   * Factory method returning all distinct columns from input\n   * @param  {object[]} - input recordset\n   * @return {module:columns}\n   */\n  static getColumns (rows) {\n    var columns = new Columns()\n    arrayify(rows).forEach(row => {\n      for (let columnName in row) {\n        let column = columns.get(columnName)\n        if (!column) {\n          column = columns.add({ name: columnName, contentWidth: 0, minContentWidth: 0 })\n        }\n        let cell = new Cell(row[columnName], column)\n        let cellValue = cell.value\n        if (ansi.has(cellValue)) {\n          cellValue = ansi.remove(cellValue)\n        }\n\n        if (cellValue.length > column.contentWidth) column.contentWidth = cellValue.length\n\n        let longestWord = getLongestWord(cellValue)\n        if (longestWord > column.minContentWidth) {\n          column.minContentWidth = longestWord\n        }\n        if (!column.contentWrappable) column.contentWrappable = wrap.isWrappable(cellValue)\n      }\n    })\n    return columns\n  }\n}\n\nfunction getLongestWord (line) {\n  const words = wrap.getChunks(line)\n  return words.reduce((max, word) => {\n    return Math.max(word.length, max)\n  }, 0)\n}\n\nmodule.exports = Columns\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    result++;\n  }\n  return result;\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeFloor = Math.floor;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.repeat` which doesn't coerce arguments.\n *\n * @private\n * @param {string} string The string to repeat.\n * @param {number} n The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n */\nfunction baseRepeat(string, n) {\n  var result = '';\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    if (n) {\n      string += string;\n    }\n  } while (n);\n\n  return result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates the padding for `string` based on `length`. The `chars` string\n * is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {number} length The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padding for `string`.\n */\nfunction createPadding(length, chars) {\n  chars = chars === undefined ? ' ' : baseToString(chars);\n\n  var charsLength = chars.length;\n  if (charsLength < 2) {\n    return charsLength ? baseRepeat(chars, length) : chars;\n  }\n  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n  return hasUnicode(chars)\n    ? castSlice(stringToArray(result), 0, length).join('')\n    : result.slice(0, length);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Pads `string` on the right side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padEnd('abc', 6);\n * // => 'abc   '\n *\n * _.padEnd('abc', 6, '_-');\n * // => 'abc_-_'\n *\n * _.padEnd('abc', 3);\n * // => 'abc'\n */\nfunction padEnd(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (string + createPadding(length - strLength, chars))\n    : string;\n}\n\nmodule.exports = padEnd;\n","'use strict'\nconst os = require('os')\n\n/**\n * @module table-layout\n */\n\n/**\n * Recordset data in (array of objects), text table out.\n * @alias module:table-layout\n * @example\n * > Table = require('table-layout')\n * > jsonData = [{\n *   col1: 'Some text you wish to read in table layout',\n *   col2: 'And some more text in column two. '\n * }]\n * > table = new Table(jsonData, { maxWidth: 30 })\n * > console.log(table.toString())\n *  Some text you  And some more\n *  wish to read   text in\n *  in table      column two.\n *  layout\n */\nclass Table {\n\n  /**\n   * @param {object[]} - input data\n   * @param [options] {object} - optional settings\n   * @param [options.maxWidth] {number} - maximum width of layout\n   * @param [options.noWrap] {boolean} - disable wrapping on all columns\n   * @param [options.noTrim] {boolean} - disable line-trimming\n   * @param [options.break] {boolean} - enable word-breaking on all columns\n   * @param [options.columns] {module:table-layout~columnOption} - array of column-specific options\n   * @param [options.ignoreEmptyColumns] {boolean} - if set, empty columns or columns containing only whitespace are not rendered.\n   * @param [options.padding] {object} - Padding values to set on each column. Per-column overrides can be set in the `options.columns` array.\n   * @param [options.padding.left] {string} - Defaults to a single space.\n   * @param [options.padding.right] {string} - Defaults to a single space.\n   * @alias module:table-layout\n   */\n  constructor (data, options) {\n    let ttyWidth = (process && (process.stdout.columns || process.stderr.columns)) || 0\n\n    /* Windows quirk workaround  */\n    if (ttyWidth && os.platform() === 'win32') ttyWidth--\n\n    let defaults = {\n      padding: {\n        left: ' ',\n        right: ' '\n      },\n      maxWidth: ttyWidth || 80,\n      columns: []\n    }\n\n    const extend = require('deep-extend')\n    this.options = extend(defaults, options)\n    this.load(data)\n  }\n\n  load (data) {\n    const Rows = require('./lib/rows')\n    const Columns = require('./lib/columns')\n\n    let options = this.options\n\n    /* remove empty columns */\n    if (options.ignoreEmptyColumns) {\n      data = Rows.removeEmptyColumns(data)\n    }\n\n    this.columns = Columns.getColumns(data)\n    this.rows = new Rows(data, this.columns)\n\n    /* load default column properties from options */\n    this.columns.maxWidth = options.maxWidth\n    this.columns.list.forEach(column => {\n      if (options.padding) column.padding = options.padding\n      if (options.noWrap) column.noWrap = options.noWrap\n      if (options.break) {\n        column.break = options.break\n        column.contentWrappable = true\n      }\n    })\n\n    /* load column properties from options.columns */\n    options.columns.forEach(optionColumn => {\n      let column = this.columns.get(optionColumn.name)\n      if (column) {\n        if (optionColumn.padding) {\n          column.padding.left = optionColumn.padding.left\n          column.padding.right = optionColumn.padding.right\n        }\n        if (optionColumn.width) column.width = optionColumn.width\n        if (optionColumn.maxWidth) column.maxWidth = optionColumn.maxWidth\n        if (optionColumn.minWidth) column.minWidth = optionColumn.minWidth\n        if (optionColumn.noWrap) column.noWrap = optionColumn.noWrap\n        if (optionColumn.break) {\n          column.break = optionColumn.break\n          column.contentWrappable = true\n        }\n      }\n    })\n\n    this.columns.autoSize()\n    return this\n  }\n\n  getWrapped () {\n    const wrap = require('wordwrapjs')\n\n    this.columns.autoSize()\n    return this.rows.list.map(row => {\n      let line = []\n      row.forEach((cell, column) => {\n        if (column.noWrap) {\n          line.push(cell.value.split(/\\r\\n?|\\n/))\n        } else {\n          line.push(wrap.lines(cell.value, {\n            width: column.wrappedContentWidth,\n            break: column.break,\n            noTrim: this.options.noTrim\n          }))\n        }\n      })\n      return line\n    })\n  }\n\n  getLines () {\n    var wrappedLines = this.getWrapped()\n    var lines = []\n    wrappedLines.forEach(wrapped => {\n      let mostLines = getLongestArray(wrapped)\n      for (let i = 0; i < mostLines; i++) {\n        let line = []\n        wrapped.forEach(cell => {\n          line.push(cell[i] || '')\n        })\n        lines.push(line)\n      }\n    })\n    return lines\n  }\n\n  /**\n   * Identical to `.toString()` with the exception that the result will be an array of lines, rather than a single, multi-line string.\n   * @returns {string[]}\n   */\n  renderLines () {\n    var lines = this.getLines()\n    return lines.map(line => {\n      return line.reduce((prev, cell, index) => {\n        let column = this.columns.list[index]\n        return prev + padCell(cell, column.padding, column.generatedWidth)\n      }, '')\n    })\n  }\n\n  /**\n   * Returns the input data as a text table.\n   * @returns {string}\n   */\n  toString () {\n    return this.renderLines().join(os.EOL) + os.EOL\n  }\n}\n\n/**\n * Array of arrays in.. Returns the length of the longest one\n * @returns {number}\n * @private\n */\nfunction getLongestArray (arrays) {\n  var lengths = arrays.map(array => array.length)\n  return Math.max.apply(null, lengths)\n}\n\nfunction padCell (cellValue, padding, width) {\n  const ansi = require('./lib/ansi')\n  const padEnd = require('lodash.padend')\n  var ansiLength = cellValue.length - ansi.remove(cellValue).length\n  cellValue = cellValue || ''\n  return (padding.left || '') +\n  padEnd(cellValue, width - padding.length() + ansiLength) +\n  (padding.right || '')\n}\n\n/**\n * @typedef module:table-layout~columnOption\n * @property name {string} - column name, must match a property name in the input\n * @property [width] {number} - A specific column width. Supply either this or a min and/or max width.\n * @property [minWidth] {number} - column min width\n * @property [maxWidth] {number} - column max width\n * @property [nowrap] {boolean} - disable wrapping for this column\n * @property [break] {boolean} - enable word-breaking for this columns\n * @property [padding] {object} - padding options\n * @property [padding.left] {string} - a string to pad the left of each cell (default: `' '`)\n * @property [padding.right] {string} - a string to pad the right of each cell (default: `' '`)\n */\n\nmodule.exports = Table\n","'use strict'\nconst Section = require('./section')\nconst Table = require('table-layout')\nconst chalkFormat = require('./chalk-format')\nconst t = require('typical')\nconst arrayify = require('array-back')\n\nclass OptionList extends Section {\n  constructor (data) {\n    super()\n    let definitions = arrayify(data.optionList)\n    const hide = arrayify(data.hide)\n    const groups = arrayify(data.group)\n\n    /* filter out hidden definitions */\n    if (hide.length) {\n      definitions = definitions.filter(definition => {\n        return hide.indexOf(definition.name) === -1\n      })\n    }\n\n    /* All definitions must have a name */\n    const validNames = definitions.every(d => d.name)\n    if (!validNames) {\n      throw new Error('Every definition in the optionList must have a `name` property')\n    }\n\n    if (data.header) this.header(data.header)\n\n    if (groups.length) {\n      definitions = definitions.filter(def => {\n        const noGroupMatch = groups.indexOf('_none') > -1 && !t.isDefined(def.group)\n        const groupMatch = intersect(arrayify(def.group), groups)\n        if (noGroupMatch || groupMatch) return def\n      })\n    }\n\n    const rows = definitions.map(def => {\n      return {\n        option: getOptionNames(def, data.reverseNameOrder),\n        description: chalkFormat(def.description)\n      }\n    })\n\n    const tableOptions = data.tableOptions || {\n      padding: { left: '  ', right: ' ' },\n      columns: [\n        { name: 'option', noWrap: true },\n        { name: 'description', maxWidth: 80 }\n      ]\n    }\n    const table = new Table(rows, tableOptions)\n    this.add(table.renderLines())\n\n    this.emptyLine()\n  }\n}\n\nfunction getOptionNames (definition, reverseNameOrder) {\n  let type = definition.type ? definition.type.name.toLowerCase() : ''\n  const multiple = definition.multiple ? '[]' : ''\n  if (type) {\n    type = type === 'boolean' ? '' : `{underline ${type}${multiple}}`\n  }\n  // console.error(require('util').inspect(definition.typeLabel || type, { depth: 6, colors: true }))\n  type = chalkFormat(definition.typeLabel || type)\n\n  let result = ''\n  if (definition.alias) {\n    if (reverseNameOrder) {\n      result = `${chalkFormat(`{bold --${definition.name}}`)}, ${chalkFormat(`{bold -${definition.alias}}`)} ${type}`\n    } else {\n      result = `${chalkFormat(`{bold -${definition.alias}}`)}, ${chalkFormat(`{bold --${definition.name}} ${type}`)}`\n    }\n  } else {\n    result = `${chalkFormat(`{bold --${definition.name}}`)} ${type}`\n  }\n  return result\n}\n\nfunction intersect (arr1, arr2) {\n  return arr1.some(function (item1) {\n    return arr2.some(function (item2) {\n      return item1 === item2\n    })\n  })\n}\n\nmodule.exports = OptionList\n","'use strict'\nconst Table = require('table-layout')\nconst chalkFormat = require('./chalk-format')\nconst t = require('typical')\n\nclass Content {\n  constructor (content) {\n    this._content = content\n  }\n\n  lines () {\n    const content = this._content\n    const defaultPadding = { left: '  ', right: ' ' }\n\n    if (content) {\n      /* string content */\n      if (t.isString(content)) {\n        const table = new Table({ column: chalkFormat(content) }, {\n          padding: defaultPadding,\n          maxWidth: 80\n        })\n        return table.renderLines()\n\n      /* array of strings */\n      } else if (Array.isArray(content) && content.every(t.isString)) {\n        const rows = content.map(string => ({ column: chalkFormat(string) }))\n        const table = new Table(rows, {\n          padding: defaultPadding,\n          maxWidth: 80\n        })\n        return table.renderLines()\n\n      /* array of objects (use table-layout) */\n      } else if (Array.isArray(content) && content.every(t.isPlainObject)) {\n        const table = new Table(content.map(row => ansiFormatRow(row)), {\n          padding: defaultPadding\n        })\n        return table.renderLines()\n\n      /* { options: object, data: object[] } */\n      } else if (t.isPlainObject(content)) {\n        if (!content.options || !content.data) {\n          throw new Error('must have an \"options\" or \"data\" property\\n' + JSON.stringify(content))\n        }\n        const options = Object.assign(\n          { padding: defaultPadding },\n          content.options\n        )\n\n        /* convert nowrap to noWrap to avoid breaking compatibility */\n        if (options.columns) {\n          options.columns = options.columns.map(column => {\n            if (column.nowrap) {\n              column.noWrap = column.nowrap\n              delete column.nowrap\n            }\n            return column\n          })\n        }\n\n        const table = new Table(\n          content.data.map(row => ansiFormatRow(row)),\n          options\n        )\n        return table.renderLines()\n      } else {\n        const message = `invalid input - 'content' must be a string, array of strings, or array of plain objects:\\n\\n${JSON.stringify(content)}`\n        throw new Error(message)\n      }\n    }\n  }\n}\n\nfunction ansiFormatRow (row) {\n  for (const key in row) {\n    row[key] = chalkFormat(row[key])\n  }\n  return row\n}\n\nmodule.exports = Content\n","'use strict'\nconst Section = require('./section')\n\nclass ContentSection extends Section {\n  constructor (section) {\n    super()\n    this.header(section.header)\n\n    if (section.content) {\n      /* add content without indentation or wrapping */\n      if (section.raw) {\n        const arrayify = require('array-back')\n        const chalkFormat = require('./chalk-format')\n        const content = arrayify(section.content).map(line => chalkFormat(line))\n        this.add(content)\n      } else {\n        const Content = require('./content')\n        const content = new Content(section.content)\n        this.add(content.lines())\n      }\n\n      this.emptyLine()\n    }\n  }\n}\n\nmodule.exports = ContentSection\n","'use strict'\n/**\n * @module command-line-usage\n */\nmodule.exports = commandLineUsage\n\n/**\n * Generates a usage guide suitable for a command-line app.\n * @param {Section|Section[]} - One of more section objects ({@link module:command-line-usage~content} or {@link module:command-line-usage~optionList}).\n * @returns {string}\n * @alias module:command-line-usage\n */\nfunction commandLineUsage (sections) {\n  const arrayify = require('array-back')\n  sections = arrayify(sections)\n  if (sections.length) {\n    const OptionList = require('./lib/option-list')\n    const ContentSection = require('./lib/content-section')\n    const output = sections.map(section => {\n      if (section.optionList) {\n        return new OptionList(section)\n      } else {\n        return new ContentSection(section)\n      }\n    })\n    return '\\n' + output.join('\\n')\n  }\n}\n\n/**\n * A Content section comprises a header and one or more lines of content.\n * @typedef module:command-line-usage~content\n * @property header {string} - The section header, always bold and underlined.\n * @property content {string|string[]|object[]} - Overloaded property, accepting data in one of four formats:\n *\n * 1. A single string (one line of text)\n * 2. An array of strings (multiple lines of text)\n * 3. An array of objects (recordset-style data). In this case, the data will be rendered in table format. The property names of each object are not important, so long as they are consistent throughout the array.\n * 4. An object with two properties - `data` and `options`. In this case, the data and options will be passed directly to the underlying [table layout](https://github.com/75lb/table-layout) module for rendering.\n *\n * @property raw {boolean} - Set to true to avoid indentation and wrapping. Useful for banners.\n * @example\n * Simple string of content. For ansi formatting, use [chalk template literal syntax](https://github.com/chalk/chalk#tagged-template-literal).\n * ```js\n * {\n *   header: 'A typical app',\n *   content: 'Generates something {rgb(255,200,0).italic very {underline.bgRed important}}.'\n * }\n * ```\n *\n * An array of strings is interpreted as lines, to be joined by the system newline character.\n * ```js\n * {\n *   header: 'A typical app',\n *   content: [\n *     'First line.',\n *     'Second line.'\n *   ]\n * }\n * ```\n *\n * An array of recordset-style objects are rendered in table layout.\n * ```js\n * {\n *   header: 'A typical app',\n *   content: [\n *     { colA: 'First row, first column.', colB: 'First row, second column.'},\n *     { colA: 'Second row, first column.', colB: 'Second row, second column.'}\n *   ]\n * }\n * ```\n *\n * An object with `data` and `options` properties will be passed directly to the underlying [table layout](https://github.com/75lb/table-layout) module for rendering.\n * ```js\n * {\n *   header: 'A typical app',\n *   content: {\n *     data: [\n *      { colA: 'First row, first column.', colB: 'First row, second column.'},\n *      { colA: 'Second row, first column.', colB: 'Second row, second column.'}\n *     ],\n *     options: {\n *       maxWidth: 60\n *     }\n *   }\n * }\n * ```\n */\n\n /**\n  * A OptionList section adds a table displaying details of the available options.\n  * @typedef module:command-line-usage~optionList\n  * @property {string} [header] - The section header, always bold and underlined.\n  * @property optionList {OptionDefinition[]} - an array of [option definition](https://github.com/75lb/command-line-args/blob/master/doc/option-definition.md) objects. In addition to the regular definition properties, command-line-usage will look for:\n  *\n  * - `description` - a string describing the option.\n  * - `typeLabel` - a string to replace the default type string (e.g. `<string>`). It's often more useful to set a more descriptive type label, like `<ms>`, `<files>`, `<command>` etc.\n  * @property {string|string[]} [group] - If specified, only options from this particular group will be printed. [Example](https://github.com/75lb/command-line-usage/blob/master/example/groups.js).\n  * @property {string|string[]} [hide] - The names of one of more option definitions to hide from the option list. [Example](https://github.com/75lb/command-line-usage/blob/master/example/hide.js).\n  * @property {boolean} [reverseNameOrder] - If true, the option alias will be displayed after the name, i.e. `--verbose, -v` instead of `-v, --verbose`).\n  * @property {object} [tableOptions] - An options object suitable for passing into [table-layout](https://github.com/75lb/table-layout#table-). See [here for an example](https://github.com/75lb/command-line-usage/blob/master/example/option-list-options.js).\n  *\n  * @example\n  * {\n  *   header: 'Options',\n  *   optionList: [\n  *     {\n  *       name: 'help', alias: 'h', description: 'Display this usage guide.'\n  *     },\n  *     {\n  *       name: 'src', description: 'The input files to process',\n  *       multiple: true, defaultOption: true, typeLabel: '{underline file} ...'\n  *     },\n  *     {\n  *       name: 'timeout', description: 'Timeout value in ms. This description is needlessly long unless you count testing of the description column maxWidth useful.',\n  *       alias: 't', typeLabel: '{underline ms}'\n  *     }\n  *   ]\n  * }\n  */\n","import commandLineUsage from 'command-line-usage'\nimport options from './options'\n\nexport default commandLineUsage([\n  {\n    header: 'vue-i18n-decentralizer',\n    content: 'Split your centralized locales into every vue component which uses them'\n  },\n  {\n    header: 'Usage',\n    content: 'node dist/main.js [command] [...args]'\n  },\n  {\n    header: 'Available Commands',\n    content: [\n      { name: 'decentralize', summary: 'split translations from your locales files to your component files' },\n      { name: 'prune', summary: 'remove unused translations frmo your locales files' }\n    ]\n  },\n  {\n    header: 'Arguments',\n    optionList: options.filter(opt => opt.name !== 'command')\n  }\n])","export const ErrorRequireArgument = name => new Error(`Argument ${name} is required`)","import { ErrorRequireArgument } from '~/errors'\n\nexport const validateArguments = command => ({ source, localesFolder }) => {\n  if (!Array.isArray(source) || !(source.length > 0)) {\n    throw ErrorRequireArgument('source')\n  }\n\n  if (typeof localesFolder !== 'string' || !(localesFolder.length > 0)) {\n    throw ErrorRequireArgument('localesFolder')\n  }\n\n  return command\n}","import { validateArguments } from '~/helpers'\n\nexport default validateArguments(({ source, localesFolder, output }) => {\n\n})","export default () => {}","import decentralize from './decentralize'\nimport prune from './prune'\n\nexport default {\n  decentralize,\n  prune\n}","import commandLineArgs from 'command-line-args'\nimport optionsDefinition from '~/cli/options'\nimport usage from '~/cli/usage'\nimport { DECENTRALIZE, PRUNE } from './constants'\nimport commands from './commands'\n\nconst options = commandLineArgs(optionsDefinition)\n\nswitch (options.command) {\n  case DECENTRALIZE:\n  case PRUNE:\n    commands[options.command](options)\n    break\n  default:\n    console.log(usage)\n    break\n}"]}